-- migrations/001_create_initial_tables.sql
-- Criação das tabelas principais do sistema

-- Criar tipos ENUM
DO $$ BEGIN
    CREATE TYPE user_role AS ENUM ('admin', 'user');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    CREATE TYPE room_status AS ENUM ('available', 'maintenance');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    CREATE TYPE booking_status AS ENUM ('confirmed', 'cancelled', 'in_progress');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

-- Tabela Users
CREATE TABLE IF NOT EXISTS Users (
  user_id     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name        VARCHAR(100)      NOT NULL,
  email       VARCHAR(100) UNIQUE NOT NULL,
  password    VARCHAR(255)      NOT NULL,
  phone       VARCHAR(20),
  role        user_role         NOT NULL DEFAULT 'user',
  created_at  TIMESTAMP         NOT NULL DEFAULT now(),
  updated_at  TIMESTAMP         NOT NULL DEFAULT now()
);

-- Tabela Room_Types
CREATE TABLE IF NOT EXISTS Room_Types (
  room_type_id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name          VARCHAR(50)      NOT NULL,
  description   TEXT,
  created_at    TIMESTAMP        NOT NULL DEFAULT now(),
  updated_at    TIMESTAMP        NOT NULL DEFAULT now()
);

-- Tabela Rooms
CREATE TABLE IF NOT EXISTS Rooms (
  room_id       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name          VARCHAR(100)     NOT NULL,
  capacity      INT              NOT NULL,
  location      VARCHAR(100),
  room_type_id  INT,
  status        room_status      NOT NULL DEFAULT 'available',
  created_at    TIMESTAMP        NOT NULL DEFAULT now(),
  updated_at    TIMESTAMP        NOT NULL DEFAULT now(),
  CONSTRAINT fk_room_type FOREIGN KEY(room_type_id) REFERENCES Room_Types(room_type_id)
);

-- Tabela Bookings
CREATE TABLE IF NOT EXISTS Bookings (
  booking_id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  room_id      INT              NOT NULL,
  user_id      INT              NOT NULL,
  title        VARCHAR(100)     NOT NULL,
  description  TEXT,
  start_time   TIMESTAMP        NOT NULL,
  end_time     TIMESTAMP        NOT NULL,
  status       booking_status   NOT NULL DEFAULT 'confirmed',
  created_at   TIMESTAMP        NOT NULL DEFAULT now(),
  updated_at   TIMESTAMP        NOT NULL DEFAULT now(),
  CONSTRAINT fk_booking_room FOREIGN KEY(room_id) REFERENCES Rooms(room_id),
  CONSTRAINT fk_booking_user FOREIGN KEY(user_id) REFERENCES Users(user_id)
);